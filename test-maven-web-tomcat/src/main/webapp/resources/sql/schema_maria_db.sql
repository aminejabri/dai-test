-- --------------------------------------------------------
-- HÔTE :                        127.0.0.1
-- VERSION DU SERVEUR:           10.4.8-MARIADB - MARIADB.ORG BINARY DISTRIBUTION
-- SE DU SERVEUR:                WIN64
-- HEIDISQL VERSION:             10.2.0.5599
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES UTF8 */;
/*!50503 SET NAMES UTF8MB4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- LISTAGE DE LA STRUCTURE DE LA BASE POUR MLR1
DROP DATABASE IF EXISTS `MLR1`;
CREATE DATABASE IF NOT EXISTS `MLR1` /*!40100 DEFAULT CHARACTER SET UTF8 */;
USE `MLR1`;


-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. UTILISATEUR
DROP TABLE IF EXISTS `UTILISATEUR`;
CREATE TABLE IF NOT EXISTS `UTILISATEUR` (
  `UTIL_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `UTIL_USERNAME` VARCHAR(45) NOT NULL,
  `UTIL_EMAIL` VARCHAR(100) NOT NULL,
  `UTIL_PASSWORD` VARCHAR(200) DEFAULT NULL,
  `UTIL_NOM` VARCHAR(100) DEFAULT NULL,
  `UTIL_PRENOM` VARCHAR(100) DEFAULT NULL,
  `UTIL_ENABLED` TINYINT(4) NOT NULL DEFAULT 1,
  `UTIL_ACCOUNT_NON_EXPIRED` TINYINT(1) DEFAULT NULL,
  `UTIL_ACCOUNT_NON_LOCKED` TINYINT(1) DEFAULT NULL,
  `UTIL_CREDENTIALS_NON_EXPIRED` TINYINT(1) DEFAULT NULL,
  `UTIL_CERTIFICAT` VARCHAR(32) DEFAULT NULL,
  PRIMARY KEY (`UTIL_ID`),
  UNIQUE KEY `UTIL_USERNAME` (`UTIL_USERNAME`),
  UNIQUE KEY `UTIL_EMAIL` (`UTIL_EMAIL`)
) ENGINE=INNODB AUTO_INCREMENT=4 DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. PROGRAMME
DROP TABLE IF EXISTS `PROGRAMME`;
CREATE TABLE IF NOT EXISTS `PROGRAMME` (
  `PROG_ID` INT(10) NOT NULL AUTO_INCREMENT,
  `PROG_NOM` VARCHAR(32) NOT NULL,
  `PROG_TYPE` TINYINT(1) DEFAULT NULL,
  PRIMARY KEY (`PROG_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. SEANCE
DROP TABLE IF EXISTS `SEANCE`;
CREATE TABLE IF NOT EXISTS `SEANCE` (
  `SEA_ID` INT(10) NOT NULL AUTO_INCREMENT,
  `SEA_TYPE` VARCHAR(32) DEFAULT NULL,
  `SEA_ACTIVE` VARCHAR(32) DEFAULT NULL,
  PRIMARY KEY (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. NOTIFICATIONS
DROP TABLE IF EXISTS `NOTIFICATIONS`;
CREATE TABLE IF NOT EXISTS `NOTIFICATIONS` (
  `NOT_ID` INT(10) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`NOT_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. PERIODE
DROP TABLE IF EXISTS `PERIODE`;
CREATE TABLE IF NOT EXISTS `PERIODE` (
  `PER_ID` INT(10) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`PER_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;


-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. AFFECT_UTIL_PROGRA
DROP TABLE IF EXISTS `AFFECT_UTIL_PROGRA`;
CREATE TABLE IF NOT EXISTS `AFFECT_UTIL_PROGRA` (
  `AUP_UTIL_ID` INT(10) NOT NULL,
  `AUP_PROG_ID` INT(10) NOT NULL,
  PRIMARY KEY (`AUP_UTIL_ID`,`AUP_PROG_ID`),
  KEY `I_FK_AFFECT_UTIL_PROGRA_UTILISATEUR` (`AUP_UTIL_ID`),
  KEY `I_FK_AFFECT_UTIL_PROGRA_PROGRAMME` (`AUP_PROG_ID`),
  CONSTRAINT `FK_AFFECT_UTIL_PROGRA_PROGRAMME` FOREIGN KEY (`AUP_PROG_ID`) REFERENCES `PROGRAMME` (`PROG_ID`),
  CONSTRAINT `FK_AFFECT_UTIL_PROGRA_UTILISATEUR` FOREIGN KEY (`AUP_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. BILAN
DROP TABLE IF EXISTS `BILAN`;
CREATE TABLE IF NOT EXISTS `BILAN` (
  `BIL_SEA_ID` INT(10) NOT NULL,
  `BIL_FCREPOS` VARCHAR(32) DEFAULT NULL,
  `BIL_FCCIBLE` VARCHAR(32) DEFAULT NULL,
  `BIL_POIDS` VARCHAR(32) DEFAULT NULL,
  `BIL_FCMAX` VARCHAR(32) DEFAULT NULL,
  `BIL_INDICEDICKSON` VARCHAR(32) DEFAULT NULL,
  `BIL_ID` INT(10) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`BIL_ID`),
  UNIQUE KEY `I_FK_BILAN_SEANCE` (`BIL_SEA_ID`),
  CONSTRAINT `FK_BILAN_SEANCE` FOREIGN KEY (`BIL_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. COMPOSER_PER_PRO
DROP TABLE IF EXISTS `COMPOSER_PER_PRO`;
CREATE TABLE IF NOT EXISTS `COMPOSER_PER_PRO` (
  `CPP_PROG_ID` INT(10) NOT NULL,
  `CPP_UTIL_ID` INT(10) NOT NULL,
  `CPP_PER_ID` INT(10) NOT NULL,
  `CPP_ORDRE_PER` INT(10) NOT NULL,
  PRIMARY KEY (`CPP_PROG_ID`,`CPP_UTIL_ID`,`CPP_PER_ID`,`CPP_ORDRE_PER`),
  KEY `I_FK_COMPOSER_PER_PRO_PROGRAMME` (`CPP_PROG_ID`),
  KEY `I_FK_COMPOSER_PER_PRO_UTILISATEUR` (`CPP_UTIL_ID`),
  KEY `I_FK_COMPOSER_PER_PRO_PERIODE` (`CPP_PER_ID`),
  CONSTRAINT `FK_COMPOSER_PER_PRO_PERIODE` FOREIGN KEY (`CPP_PER_ID`) REFERENCES `PERIODE` (`PER_ID`),
  CONSTRAINT `FK_COMPOSER_PER_PRO_PROGRAMME` FOREIGN KEY (`CPP_PROG_ID`) REFERENCES `PROGRAMME` (`PROG_ID`),
  CONSTRAINT `FK_COMPOSER_PER_PRO_UTILISATEUR` FOREIGN KEY (`CPP_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. COMPOSER_SEA_EXE
DROP TABLE IF EXISTS `COMPOSER_SEA_EXE`;
CREATE TABLE IF NOT EXISTS `COMPOSER_SEA_EXE` (
  `CSE_EXE_ID` INT(10) NOT NULL,
  `CSE_SEA_ID` INT(10) NOT NULL,
  `CSE_ORDRE` INT(10) NOT NULL,
  `CSE_CHRONO` INT(10) DEFAULT NULL,
  `CSE_REPETITION` INT(10) DEFAULT NULL,
  PRIMARY KEY (`CSE_EXE_ID`,`CSE_SEA_ID`,`CSE_ORDRE`),
  KEY `I_FK_COMPOSER_SEA_EXE_EXERCICE` (`CSE_EXE_ID`),
  KEY `I_FK_COMPOSER_SEA_EXE_SEANCE` (`CSE_SEA_ID`),
  CONSTRAINT `FK_COMPOSER_SEA_EXE_EXERCICE` FOREIGN KEY (`CSE_EXE_ID`) REFERENCES `EXERCICE` (`EXE_ID`),
  CONSTRAINT `FK_COMPOSER_SEA_EXE_SEANCE` FOREIGN KEY (`CSE_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. UTIL_SEANCE
DROP TABLE IF EXISTS `UTIL_SEANCE`;
CREATE TABLE IF NOT EXISTS `UTIL_SEANCE` (
  `UTS_SEA_ID` INT(10) NOT NULL,
  `UTS_PROG_ID` INT(10) NOT NULL,
  `UTS_UTIL_ID` INT(10) NOT NULL,
  `UTS_ORDRE` INT(10) DEFAULT NULL,
  `UTS_STATUT` VARCHAR(32) DEFAULT NULL,
  `UTS_EVALUATION` INT(10) DEFAULT NULL,
  PRIMARY KEY (`UTS_SEA_ID`,`UTS_PROG_ID`,`UTS_UTIL_ID`,`UTS_ORDRE`),
  KEY `I_FK_UTIL_SEANCE_SEANCE` (`UTS_SEA_ID`),
  KEY `I_FK_UTIL_SEANCE_PROGRAMME` (`UTS_PROG_ID`),
  KEY `I_FK_UTIL_SEANCE_UTILISATEUR` (`UTS_UTIL_ID`),
  CONSTRAINT `FK_UTIL_SEANCE_PROGRAMME` FOREIGN KEY (`UTS_PROG_ID`) REFERENCES `PROGRAMME` (`PROG_ID`),
  CONSTRAINT `FK_UTIL_SEANCE_SEANCE` FOREIGN KEY (`UTS_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`),
  CONSTRAINT `FK_UTIL_SEANCE_UTILISATEUR` FOREIGN KEY (`UTS_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. EXERCICE
DROP TABLE IF EXISTS `EXERCICE`;
CREATE TABLE IF NOT EXISTS `EXERCICE` (
  `EXE_ID` INT(10) NOT NULL AUTO_INCREMENT,
  `EXE_IMG` VARCHAR(32) DEFAULT NULL,
  `EXE_VIDEO` VARCHAR(32) DEFAULT NULL,
  `EXE_DESCRI` VARCHAR(32) DEFAULT NULL,
  PRIMARY KEY (`EXE_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. PROFIL
DROP TABLE IF EXISTS `PROFIL`;
CREATE TABLE IF NOT EXISTS `PROFIL` (
  `PRO_ID` INT(10) NOT NULL AUTO_INCREMENT,
  `PRO_UTIL_ID` INT(10) NOT NULL,
  `PRO_OBJ` VARCHAR(32) DEFAULT NULL,
  `PRO_MES_POITRINE` VARCHAR(32) DEFAULT NULL,
  `PRO_MES_TAILLE` VARCHAR(32) DEFAULT NULL,
  `PRO_MES_HANCHE` VARCHAR(32) DEFAULT NULL,
  `PRO_MES_CUISSEG` VARCHAR(32) DEFAULT NULL,
  `PRO_MES_BRASG` VARCHAR(32) DEFAULT NULL,
  PRIMARY KEY (`PRO_ID`),
  UNIQUE KEY `I_FK_PROFIL_UTILISATEUR` (`PRO_UTIL_ID`),
  CONSTRAINT `FK_PROFIL_UTILISATEUR` FOREIGN KEY (`PRO_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.


-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. RECEVOIR
DROP TABLE IF EXISTS `RECEVOIR`;
CREATE TABLE IF NOT EXISTS `RECEVOIR` (
  `REC_NOT_ID` INT(10) NOT NULL,
  `REC_UTIL_ID` INT(10) NOT NULL,
  PRIMARY KEY (`REC_NOT_ID`,`REC_UTIL_ID`),
  KEY `I_FK_RECEVOIR_NOTIFICATIONS` (`REC_NOT_ID`),
  KEY `I_FK_RECEVOIR_UTILISATEUR` (`REC_UTIL_ID`),
  CONSTRAINT `FK_RECEVOIR_NOTIFICATIONS` FOREIGN KEY (`REC_NOT_ID`) REFERENCES `NOTIFICATIONS` (`NOT_ID`),
  CONSTRAINT `FK_RECEVOIR_UTILISATEUR` FOREIGN KEY (`REC_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. ROLES
DROP TABLE IF EXISTS `ROLES`;
CREATE TABLE IF NOT EXISTS `ROLES` (
  `ROL_ID` INT(11) NOT NULL AUTO_INCREMENT,
  `ROL_UTIL_ID` INT(11) NOT NULL,
  `ROL_NAME` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`ROL_ID`),
  UNIQUE KEY `UNI_UTIL_ROLE` (`ROL_NAME`,`ROL_UTIL_ID`),
  KEY `FK_ROL_UTIL_ID` (`ROL_UTIL_ID`),
  CONSTRAINT `FK_ROL_UTIL_ID` FOREIGN KEY (`ROL_UTIL_ID`) REFERENCES `UTILISATEUR` (`UTIL_ID`)
) ENGINE=INNODB AUTO_INCREMENT=4 DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. PROG_SEANCE
DROP TABLE IF EXISTS `PROG_SEANCE`;
CREATE TABLE IF NOT EXISTS `PROG_SEANCE` (
  `PRS_PROG_ID` INT(10) NOT NULL,
  `PRS_SEA_ID` INT(10) NOT NULL,
  `PRS_ORDRE_SEANCE` INT(10) NOT NULL,
  PRIMARY KEY (`PRS_SEA_ID`,`PRS_PROG_ID`,`PRS_ORDRE_SEANCE`),
  KEY `I_FK_PROG_SEANCE_PROGRAMME` (`PRS_PROG_ID`),
  KEY `I_FK_PROG_SEANCE_SEANCE` (`PRS_SEA_ID`),
  CONSTRAINT `FK_PROG_SEANCE_PROGRAMME` FOREIGN KEY (`PRS_PROG_ID`) REFERENCES `PROGRAMME` (`PROG_ID`), 
  CONSTRAINT `FK_PROG_SEANCE_SEANCE` FOREIGN KEY (`PRS_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. SEANCE_PERIODE
DROP TABLE IF EXISTS `SEANCE_PERIODE`;
CREATE TABLE IF NOT EXISTS `SEANCE_PERIODE` (
  `SPE_PER_ID` INT(10) NOT NULL,
  `SPE_SEA_ID` INT(10) NOT NULL,
  `SPE_ORDRE_SEA` INT(10) NOT NULL,
  PRIMARY KEY (`SPE_PER_ID`,`SPE_SEA_ID`,`SPE_ORDRE_SEA`),
  KEY `I_FK_SEANCE_PERIODE_PERIODE` (`SPE_PER_ID`),
  KEY `I_FK_SEANCE_PERIODE_SEANCE` (`SPE_SEA_ID`),
  CONSTRAINT `FK_SEANCE_PERIODE_PERIODE` FOREIGN KEY (`SPE_PER_ID`) REFERENCES `PERIODE` (`PER_ID`),
  CONSTRAINT `FK_SEANCE_PERIODE_SEANCE` FOREIGN KEY (`SPE_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;

-- LES DONNÉES EXPORTÉES N'ÉTAIENT PAS SÉLECTIONNÉES.

-- LISTAGE DE LA STRUCTURE DE LA TABLE MLR1. COMPOSER_SEA_EXE
DROP TABLE IF EXISTS `COMPOSER_SEA_EXE`;
CREATE TABLE IF NOT EXISTS `COMPOSER_SEA_EXE` (
  `CSE_EXE_ID` INT(10) NOT NULL,
  `CSE_SEA_ID` INT(10) NOT NULL,
  `CSE_ORDRE` INT(10) NOT NULL,
  `CSE_CHRONO` INT(10) DEFAULT NULL,
  `CSE_REPETITION` INT(10) DEFAULT NULL,
  PRIMARY KEY (`CSE_EXE_ID`,`CSE_SEA_ID`,`CSE_ORDRE`),
  KEY `I_FK_COMPOSER_SEA_EXE_EXERCICE` (`CSE_EXE_ID`),
  KEY `I_FK_COMPOSER_SEA_EXE_SEANCE` (`CSE_SEA_ID`),
  CONSTRAINT `FK_COMPOSER_SEA_EXE_EXERCICE` FOREIGN KEY (`CSE_EXE_ID`) REFERENCES `EXERCICE` (`EXE_ID`),
  CONSTRAINT `FK_COMPOSER_SEA_EXE_SEANCE` FOREIGN KEY (`CSE_SEA_ID`) REFERENCES `SEANCE` (`SEA_ID`)
) ENGINE=INNODB DEFAULT CHARSET=UTF8;


/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
