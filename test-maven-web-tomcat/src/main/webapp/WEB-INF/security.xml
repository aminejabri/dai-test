<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
						
	<http auto-config="true">

		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="index.jsp"      access="permitAll" />
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SECRET')"/>
		
		<csrf disabled="true" />
	</http>

    <b:import resource="daoContext.xml" />

  	<b:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<authentication-manager>
		<authentication-provider>
        <jdbc-user-service data-source-ref="myDataSource"
 
					       users-by-username-query="
					         SELECT USERNAME, PASSWORD, CASE ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED' 
					         FROM users 
					         WHERE USERNAME=?;"
					 
					       authorities-by-username-query="
					        SELECT u.USERNAME, r.ROLE 
					        FROM users u, roles r
					        WHERE r.id_user = u.id_user
					        AND u.USERNAME=?;"
					 
					        />
        	<password-encoder ref="encoder"/>
		</authentication-provider>
	</authentication-manager>

</b:beans>