<b:beans xmlns="http://www.springframework.org/schema/security"
		 xmlns:b="http://www.springframework.org/schema/beans"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd">
						
	<http auto-config="true">
		<intercept-url pattern="/index.jsp" access="permitAll"/>
		<intercept-url pattern="/user/inscription" access="permitAll"/>
		<intercept-url pattern="resources/**" access="permitAll"/>
		<intercept-url pattern="/resources/**" access="permitAll"/>
		<intercept-url pattern="/login"      access="permitAll" />
		<intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/**" access="hasAnyRole('ROLE_USER','ROLE_ADMIN','ROLE_SECRET')"/>
		<csrf disabled="true" />
		<form-login login-page="/login" default-target-url="/account" authentication-failure-url="/login?success=false"/>
		<logout logout-url="/logout" logout-success-url="/login"/>
	</http>

    <b:import resource="daoContext.xml" />

  	<b:bean id="encoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	<authentication-manager>
		<authentication-provider>
        <jdbc-user-service data-source-ref="myDataSource"
 
					       users-by-username-query="
					         SELECT UTIL_USERNAME, UTIL_PASSWORD, CASE UTIL_ENABLED WHEN 1 THEN 'true' ELSE 'false' END 'ENABLED' 
					         FROM UTILISATEUR 
					         WHERE UTIL_USERNAME=?;"
					 
					       authorities-by-username-query="
					        SELECT u.UTIL_USERNAME, r.ROL_NAME
					        FROM UTILISATEUR u, ROLES r
					        WHERE r.ROL_UTIL_ID = u.UTIL_ID
					        AND u.UTIL_USERNAME=?;"
					 
					        />
        	<password-encoder ref="encoder"/>
		</authentication-provider>
	</authentication-manager>

</b:beans>